pragma solidity ^0.4.0;

contract vote_contract {

    struct Proposal {
        bytes32 name;   // name 
        uint voteCount; // number of accumulated votes
    }
    
    address public chairperson;
    
    mapping(address => uint) public voters;
    
    Proposal [] public proposal;
  
  
    // MODIFIER EVENTS
  // isowner
  // canvote
  
   address owner;
    
    modifier isowner()
    {
        if(msg.sender != owner){throw;
        _;
        }
    }
  

    // CONSTRUCTEUR
    function vote_contract() {
        owner = msg.sender;
    }
    
    
    // FUNCTIONS

    function vote(uint proposal) public {
        sender.voted = true;
        sender.vote = proposal;
        proposal[proposal].voteCount += sender.weight;
    }
    

    
    // KILL    
    function kill() isowner() {
        delete owner;
        selfdestruct(msg.sender);
    }
}
